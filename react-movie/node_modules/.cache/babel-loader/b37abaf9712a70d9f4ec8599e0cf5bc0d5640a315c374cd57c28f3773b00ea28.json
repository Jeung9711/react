{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\react-movie\\\\src\\\\components\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport styles from './MovieList.module.css';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = () => {\n  _s();\n  const [result, setResult] = useState([]);\n  // 검색어를 받는 상태변수\n  const [data, setData] = useState('');\n\n  // api에서 영화 정보를 받아오기\n  useEffect(() => {\n    getMovie();\n  }, [data]);\n\n  // 영화 정보 받아와서 출력하기\n  const getMovie = async () => {\n    const url = 'https://api.themoviedb.org/3/search/movie?api_key=cba95d401a14ab806ffc13a5052aab89&query=' + data;\n    const res = await fetch(url);\n    const movie = await res.json();\n    setResult(movie.results);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.movie,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC601\\uD654 \\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.search_box,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC601\\uD654 \\uC81C\\uBAA9\\uC744 \\uAC80\\uC0C9\\uD558\\uC138\\uC694\"\n        // value={movie}\n        ,\n        onChange: e => {\n          const inputValue = e.target.value;\n          setData(inputValue);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {},\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.list,\n      children: result.map(v => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w185/${v.poster_path}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uC11C\\uC6B8\\uC758 \\uBD04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD3C9\\uC810: 7.428\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uAC1C\\uBD09\\uC77C: 2023-11-22\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"After the assassination of President Park, martial law has been declared.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"uDmj8LvM/0zjx+qT8S3Uwpznyp0=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["useState","styles","useEffect","jsxDEV","_jsxDEV","MovieList","_s","result","setResult","data","setData","getMovie","url","res","fetch","movie","json","results","className","children","fileName","_jsxFileName","lineNumber","columnNumber","search_box","type","placeholder","onChange","e","inputValue","target","value","onClick","list","map","v","src","poster_path","_c","$RefreshReg$"],"sources":["C:/react/react-movie/src/components/MovieList.js"],"sourcesContent":["import { useState } from 'react';\nimport styles from './MovieList.module.css';\nimport { useEffect } from 'react';\n\nconst MovieList = () => {\n  const [result,setResult] = useState([]);\n  // 검색어를 받는 상태변수\n  const [data,setData] = useState('');\n\n  // api에서 영화 정보를 받아오기\n  useEffect(()=> {\n    getMovie();\n  },[data])\n\n  // 영화 정보 받아와서 출력하기\n  const getMovie = async () => {\n    const url = 'https://api.themoviedb.org/3/search/movie?api_key=cba95d401a14ab806ffc13a5052aab89&query='+data;\n    const res = await fetch(url);\n    const movie = await res.json();\n\n    setResult(movie.results);\n  }\n  \n\n  return (\n    <div className={styles.movie}>\n      <h1>영화 검색</h1>\n      <div className={styles.search_box}>\n        <input\n          type=\"text\"\n          placeholder=\"영화 제목을 검색하세요\"\n          // value={movie}\n          onChange={(e)=>{\n            const inputValue = e.target.value;\n            setData(inputValue);\n          }}\n        />\n        <button onClick={() => {\n\n        }}>\n          검색\n        </button>\n      </div>\n      <ul className={styles.list}>\n        {\n          result.map((v) => {\n            return(\n              <li>\n                <img src={`https://image.tmdb.org/t/p/w185/${v.poster_path}`}\n                />\n                <h2>서울의 봄</h2>\n                <p>평점: 7.428</p>\n                <p>개봉일: 2023-11-22</p>\n                <p>After the assassination of President Park, martial law has been declared.</p>\n              </li>\n            );\n          })\n        }\n        \n      </ul>\n    </div>\n  );\n};\n\nexport default MovieList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}