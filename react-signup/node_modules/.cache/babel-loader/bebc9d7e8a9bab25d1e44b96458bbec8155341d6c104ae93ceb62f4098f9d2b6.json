{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\react-signup\\\\src\\\\Data.js\";\nimport Id from './Id';\nimport Password from './Password';\nimport Email from './Email';\nimport Phonenumber from './Phonenumber';\nimport Address from './Address';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Data({\n  check\n}) {\n  const sendData = () => {\n    //자식의 변수 받기\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: check ?\n    /*#__PURE__*/\n    // 컴포넌트를 감싸기 위해 사용 <></>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Id, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Email, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Phonenumber, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Address, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_c = Data;\nexport default Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["Id","Password","Email","Phonenumber","Address","jsxDEV","_jsxDEV","Fragment","_Fragment","Data","check","sendData","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/react/react-signup/src/Data.js"],"sourcesContent":["import Id from './Id';\r\nimport Password from './Password';\r\nimport Email from './Email';\r\nimport Phonenumber from './Phonenumber';\r\nimport Address from './Address';\r\n\r\nfunction Data({ check }) {\r\n\r\n    const sendData = ()=> {\r\n        //자식의 변수 받기\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {check ?\r\n            // 컴포넌트를 감싸기 위해 사용 <></>\r\n                <>\r\n                    <Id></Id>\r\n                    <Password></Password>\r\n                    <Email></Email>\r\n                    <Phonenumber></Phonenumber>\r\n                    <Address></Address>\r\n                </>\r\n                : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Data;"],"mappings":";AAAA,OAAOA,EAAE,MAAM,MAAM;AACrB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,SAASC,IAAIA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAErB,MAAMC,QAAQ,GAAGA,CAAA,KAAK;IAClB;EAAA,CACH;EAED,oBACIL,OAAA;IAAAM,QAAA,EACKF,KAAK;IAAA;IACN;IACIJ,OAAA,CAAAE,SAAA;MAAAI,QAAA,gBACIN,OAAA,CAACN,EAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACTV,OAAA,CAACL,QAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eACrBV,OAAA,CAACJ,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACfV,OAAA,CAACH,WAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,eAC3BV,OAAA,CAACF,OAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC;IAAA,eACrB,CAAC,GACD;EAAI;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd;AAACC,EAAA,GApBQR,IAAI;AAsBb,eAAeA,IAAI;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}