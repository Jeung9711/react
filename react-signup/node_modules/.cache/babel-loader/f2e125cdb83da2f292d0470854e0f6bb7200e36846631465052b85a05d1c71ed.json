{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\react-signup\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport Formgroup from './Formgroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // 각 자식요소의 변수를 받아오기 위해 상태변수 설정\n  // 각 값을 한번에 저장하도록 객체 상태변수로 설정\n  const [formData, setFormData] = useState({\n    id: '',\n    password: '',\n    email: '',\n    phone: '',\n    address: ''\n  });\n  //  객체를 JSON 문자로 변환\n  // JSON.stringify(formData);\n\n  const sendData = () => {\n    alert(`\n        Id : ${formData.id}\n        Password : ${formData.password}\n        Email : ${formData.email}\n        Phone : ${formData.phone}\n        Address : ${formData.address}\n      `);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Formgroup, {\n      formData: formData,\n      setFormData: setFormData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: sendData,\n      children: \" \\uC81C\\uCD9C \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rnhmksk7B61kK8Q8BBlbGr+fH4I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Formgroup","jsxDEV","_jsxDEV","App","_s","formData","setFormData","id","password","email","phone","address","sendData","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/react/react-signup/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Formgroup from './Formgroup';\n\nconst App = () => {\n  // 각 자식요소의 변수를 받아오기 위해 상태변수 설정\n  // 각 값을 한번에 저장하도록 객체 상태변수로 설정\n  const [formData, setFormData] = useState({\n    id:'',\n    password:'',\n    email:'',\n    phone:'',\n    address:''\n  });\n  //  객체를 JSON 문자로 변환\n  // JSON.stringify(formData);\n\n  const sendData = () => {\n    alert(`\n        Id : ${formData.id}\n        Password : ${formData.password}\n        Email : ${formData.email}\n        Phone : ${formData.phone}\n        Address : ${formData.address}\n      `);\n  }\n  \n  return (\n    <div className=\"container\">\n      <Formgroup formData={formData} setFormData={setFormData}></Formgroup>\n      <button type='submit'onClick={sendData}> 제출 </button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,EAAE,EAAC,EAAE;IACLC,QAAQ,EAAC,EAAE;IACXC,KAAK,EAAC,EAAE;IACRC,KAAK,EAAC,EAAE;IACRC,OAAO,EAAC;EACV,CAAC,CAAC;EACF;EACA;;EAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrBC,KAAK,CAAC;AACV,eAAeR,QAAQ,CAACE,EAAE;AAC1B,qBAAqBF,QAAQ,CAACG,QAAQ;AACtC,kBAAkBH,QAAQ,CAACI,KAAK;AAChC,kBAAkBJ,QAAQ,CAACK,KAAK;AAChC,oBAAoBL,QAAQ,CAACM,OAAO;AACpC,OAAO,CAAC;EACN,CAAC;EAED,oBACET,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBb,OAAA,CAACF,SAAS;MAACK,QAAQ,EAAEA,QAAS;MAACC,WAAW,EAAEA;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACrEjB,OAAA;MAAQkB,IAAI,EAAC,QAAQ;MAAAC,OAAO,EAAET,QAAS;MAAAG,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAACf,EAAA,CA7BID,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}